/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.2/userguide/tutorial_java_projects.html
 */

plugins {
	id 'org.springframework.boot' version '2.2.0.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'

group = 'kr.co.smartm2m'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	maven {
        url 'https://nexus.hyperledger.org/content/repositories/snapshots/'
    }
    flatDir {
            dirs 'libs'
    }
}

configurations {
    dev
}

dependencies {
	annotationProcessor 'org.projectlombok:lombok:1.18.8'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
	compile 'com.google.code.gson:gson:2.8.5'
	compile 'javax.servlet:javax.servlet-api:3.1.0'	
	compile 'org.apache.httpcomponents:httpclient:4.5'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'org.springframework:spring-web'
    compile 'mysql:mysql-connector-java'
    compile 'org.springframework.boot:spring-boot-starter-jdbc'
    compile 'org.springframework:spring-jdbc:5.1.5.RELEASE'
	

	compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: '2.10.0'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.0'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.10.0'
	compile group: 'com.opencsv', name: 'opencsv', version: '4.6'
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.google.guava:guava:28.0-jre'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'junit:junit:4.12'

	dev "org.springframework.boot:spring-boot-devtools"
}

springBoot {
	mainClassName = 'ecoexp.App'
}

bootRun {
    classpath = sourceSets.main.runtimeClasspath + configurations.dev
}

task startDocker(type:Exec) {
	commandLine 'docker-compose', 'up','-d'

	standardOutput = new ByteArrayOutputStream()

	ext.output = {
		return standardOutput.toString()
	}
}

task createProc(type:Exec) {
    commandLine 'docker', 'exec', 'mysql','bash','/proc.sh' 

	standardOutput = new ByteArrayOutputStream()

	ext.output = {
		return standardOutput.toString()
	}
}
